2+2
version()
import time
import sys
from pyinput import keyboard
from pynput import keyboard
pip3
from pynput import keyboard
from pynput import keyboard
import sys
import time
import sys
from pynput import keyboard
cite("optim")
cite("optim")
optim
citation("optim")
optim
citation("stats")
# lib load ----
pacman::p_load(
tidyverse,
ggplot2,
patchwork,
robustlmm
)
setwd(this.path::here())
# Plot stuff ----
theme_uncertainty <- ggpubr::theme_pubr() +
update_geom_defaults("point", list(size = 5, alpha = 0.5, shape = 21)) +
theme(
text = element_text(size = 24),
axis.text=element_text(size=14),
plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
legend.position = "none"
)
boxplot_sig_bracket <- function(group1, group2){
ggsignif::geom_signif(
comparisons = list(c(group1, group2)),
map_signif_level = TRUE,
textsize = 0
)
}
clarity_zpos <- read_csv("../datasets/clarity/z_pos_readings.csv")
all_neuron_reading <- clarity_zpos %>%
mutate(
pos_z_lim = scales::rescale(pos_z, to = c(0, 1))
) %>%
group_by(animal_id, filename) %>%
mutate(
rel_distance = pos_z - min(pos_z),
scaled_rel_distance = scale(rel_distance),
scaled_int = scale(mean_intensity),
mean_int_rel = mean_intensity / max(mean_intensity),
integrated_in = mean_intensity*Area/max(mean_intensity*Area)
)
neuron_reading <- clarity_zpos %>%
filter(predictions == "neuron") %>%
mutate(
pos_z_lim = scales::rescale(pos_z, to = c(0, 1))
) %>%
group_by(animal_id, filename) %>%
mutate(
rel_distance = pos_z - min(pos_z),
scaled_rel_distance = scale(rel_distance),
scaled_int = scale(mean_intensity),
mean_int_rel = mean_intensity / max(mean_intensity),
integrated_in = mean_intensity*Area/max(mean_intensity*Area)
)
# null model
clarity_mdl0 <- lme4::lmer(
data = neuron_reading,
mean_int_rel ~ 1 + (1|animal_id),
REML = TRUE,
control = lme4::lmerControl(
optimizer = "bobyqa",
optCtrl = list(maxfun = 2e5)
)
)
# null model with all random effects
clarity_mdl1 <- lme4::lmer(
data = neuron_reading,
mean_int_rel ~ 1 + (pos_z_lim|animal_id),
REML = TRUE,
control = lme4::lmerControl(
optimizer = "bobyqa",
optCtrl = list(maxfun = 2e5)
)
)
# base model
clarity_mdl2 <- lme4::lmer(
data = neuron_reading,
mean_int_rel ~ pos_z_lim * group + (pos_z_lim|animal_id),
REML = TRUE,
control = lme4::lmerControl(
optimizer = "bobyqa",
optCtrl = list(maxfun = 2e5)
)
)
# adding squared term
clarity_mdl3 <- lme4::lmer(
data = neuron_reading,
mean_int_rel ~ pos_z_lim * I(pos_z_lim^2) * group + (pos_z_lim|animal_id),
REML = TRUE,
control = lme4::lmerControl(
optimizer = "bobyqa",
optCtrl = list(maxfun = 2e5)
)
)
# complete model
clarity_mdl4 <- lme4::lmer(
data = neuron_reading,
mean_int_rel ~ pos_z_lim * I(pos_z_lim^2) * group + (pos_z_lim|filename) + (pos_z_lim|animal_id),
REML = TRUE,
control = lme4::lmerControl(
optimizer = "bobyqa",
optCtrl = list(maxfun = 2e5)
)
)
# complete model cubed term
clarity_mdl5 <- lme4::lmer(
data = neuron_reading,
mean_int_rel ~ pos_z_lim * I(pos_z_lim^3) * group + (pos_z_lim|filename) + (pos_z_lim|animal_id),
REML = TRUE,
control = lme4::lmerControl(
optimizer = "bobyqa",
optCtrl = list(maxfun = 2e5)
)
)
# compare models with AIC
clarity_mdl_AIC <- AIC(
clarity_mdl0,
clarity_mdl1,
clarity_mdl2,
clarity_mdl3,
clarity_mdl4,
clarity_mdl5
)
clarity_mdl_AIC
# with f-test
anova(clarity_mdl0, clarity_mdl1)
anova(clarity_mdl1, clarity_mdl2)
anova(clarity_mdl2, clarity_mdl3)
anova(clarity_mdl3, clarity_mdl4)
anova(clarity_mdl4, clarity_mdl5)
# fit best model
clarity_mdl_opt <- lme4::lmer(
data = neuron_reading,
mean_int_rel ~ pos_z_lim * I(pos_z_lim^2) * group + (pos_z_lim|filename) + (pos_z_lim|animal_id),
control = lme4::lmerControl(
optimizer = "bobyqa",
optCtrl = list(maxfun = 2e5)
)
)
clarity_emm <- emmeans::emmeans(
clarity_mdl_opt,
revpairwise ~ group | pos_z_lim * I(pos_z_lim^2),
at = list(pos_z_lim = seq(0, 1, 0.05))
)
clarity_emm
clarity_anterior_posterior <- emmeans::emmeans(
clarity_mdl_opt,
revpairwise ~ pos_z_lim * I(pos_z_lim^2) * group,
at = list(pos_z_lim = c(0.2715, 0.539)) # 1st and 3rd quartile
)$contrasts %>% broom.mixed::tidy(conf.int = TRUE)
clarity_anterior_posterior
clarity_anterior_posterior_emm <- emmeans::emmeans(
clarity_mdl_opt,
revpairwise ~ group * pos_z_lim * I(pos_z_lim^2),
at = list(pos_z_lim = c(0.2715, 0.539)) # 1st and 3rd quartile
)$contrasts %>% broom.mixed::tidy(conf.int = TRUE)
clarity_anterior_posterior_emm
clarity_emtrend <- emmeans::emtrends(
clarity_mdl_opt,
revpairwise ~ group | pos_z_lim * I(pos_z_lim^2),
var = "pos_z_lim",
at = list(pos_z_lim = seq(0, 1, 0.01))
)
clarity_emtrend
clarity_emtrend_q <- emmeans::emtrends(
clarity_mdl_opt,
revpairwise ~ group | pos_z_lim * I(pos_z_lim^2),
var = "pos_z_lim",
at = list(pos_z_lim = summary(neuron_reading$pos_z_lim)[c(2,3,5)])
)$contrasts %>% broom.mixed::tidy(conf.int = TRUE)
clarity_emtrend_q
clarity_emtrend_ov <- emmeans::emtrends(
clarity_mdl_opt,
revpairwise ~ group | pos_z_lim * I(pos_z_lim^2),
var = "pos_z_lim"
)
clarity_emtrend_ov
total_counts <- neuron_reading %>%
group_by(animal_id, group) %>%
summarise(
oxa_count = n()
)
mean_position <- neuron_reading %>%
mutate(
hem = str_extract(filename, pattern = "(izq|der)")
)
pos_mdl <- lme4::lmer(
data = mean_position,
pos_z_lim ~ group + mean_int_rel + (1|animal_id),
control = lme4::lmerControl(
optimizer = "bobyqa",
optCtrl = list(maxfun = 2e5)
)
)
summary(pos_mdl)
pos_emm <- emmeans::emmeans(
pos_mdl,
revpairwise ~ group + mean_int_rel,
type = "response"
)
pos_emm
pos_emm_p <- broom.mixed::tidy(pos_emm$emmeans, conf.int = TRUE)
clarityp4 <- total_counts %>%
ggplot(aes(
group, oxa_count
)) +
geom_boxplot(outlier.shape = NA, aes(color = group), width = 0.5) +
geom_point(aes(fill = group)) +
scale_x_discrete(labels = c("LU", "HU")) +
theme_uncertainty +
scale_fill_manual(values = c("black", "orange")) +
scale_color_manual(values = c("black", "orange"))  +
scale_y_continuous(breaks = seq(1500, 3000, 500),
limits = c(1500, 3000),
expand = c(0,0)) +
xlab("") +
ylab(latex2exp::TeX(r"($OXA^{+} counts$)"))
clarityp4
clarityp5 <- neuron_reading %>%
ggplot(aes(
pos_z_lim
)) +
geom_density(aes(color = group, fill = group), linewidth = 1, alpha = 0.1) +
geom_vline(xintercept = 0.356, linetype = "dashed", color = "black") +
geom_vline(xintercept = 0.481, linetype = "dashed", color = "orange") +
geom_point(
data = pos_emm_p,
inherit.aes = FALSE,
aes(x = estimate, y = 2.25, fill = group)
) +
geom_errorbarh(
data = pos_emm_p,
inherit.aes = FALSE,
aes(y = 2.25, xmin = conf.low, xmax = conf.high,
color = group),
height = 0.25,
linewidth = 1.5
) +
geom_segment(aes(x = 0.356, y = 2.425, xend = 0.481, yend = 2.425),
inherit.aes = FALSE) +
theme_uncertainty +
scale_fill_manual(values = c("black", "orange")) +
scale_color_manual(values = c("black", "orange")) +
xlab(latex2exp::TeX(r"($Anterior \rightarrow \ Posterior$)")) +
ylab(latex2exp::TeX(r"($OXA^{+} counts \ density$)")) +
scale_y_continuous(breaks = seq(0, 2.5, 0.5),
limits = c(0, 2.5),
expand = c(0,0)) +
scale_x_continuous(breaks = seq(0, 1, 0.25),
limits = c(0, 1),
expand = c(0,0))
clarityp5
