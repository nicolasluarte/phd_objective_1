geom_ribbon(aes(
ymin = conf.low,
ymax = conf.high,
fill = group
), alpha = 0.25) +
geom_line(aes(color = group)) +
geom_vline(
xintercept = summary(neuron_reading$pos_z_lim)[c(2, 5)],
linetype = "dashed"
) +
scale_x_continuous(breaks = seq(0, 1, 0.1)) +
theme_uncertainty +
scale_y_continuous(
breaks = seq(0, 1.4, 0.2),
limits = c(0, 1.4),
expand = c(0, 0)
) +
ylab(latex2exp::TeX(r"($\hat{\mu_}_{oxa \ intensity}$)")) +
xlab(latex2exp::TeX(r"($Anterior \rightarrow \ Posterior$)")) +
scale_fill_manual(values = c("black", "orange")) +
scale_color_manual(values = c("black", "orange"))
clarityp2
clarityp3 <- clarity_anterior_posterior_emm %>%
slice(c(2, 5)) %>%
ggplot(aes(
contrast, estimate
)) +
geom_pointrange(aes(ymin = conf.low, ymax = conf.high)) +
geom_hline(yintercept = 0, linetype = "dashed") +
theme_uncertainty +
scale_y_continuous(
breaks = seq(-0.2, 0.4, 0.1),
limits = c(-0.2, 0.4),
expand = c(0, 0)
) +
scale_x_discrete(labels = c(
"LU",
"HU"
)) +
ylab(latex2exp::TeX(r"($\hat{\mu_}_{posterior - anterior}$)")) +
xlab("") +
scale_fill_manual(values = c("black", "orange")) +
scale_color_manual(values = c("black", "orange"))
clarityp3
## p::metabolic efficiency ----
ip1 <- HU_vs_LU_mdl %>%
filter(experimental_phase == "Experimental") %>%
ggplot(aes(
rel_date, resid_hu
)) +
stat_summary(
fun.data = "mean_se",
geom = "ribbon",
aes(group = 1),
fill = "orange"
) +
stat_summary(
fun.data = "mean_se",
geom = "line",
aes(group = 1)
) +
geom_line(aes(group = ID), alpha = 0.25) +
geom_hline(yintercept = 0, color = "black", linetype = "dashed") +
scale_x_continuous(breaks = seq(0, 56, 7)) +
theme_uncertainty +
scale_y_continuous(
breaks = seq(-10, 4, 2),
limits = c(-10, 4),
expand = c(0, 0)
) +
ylab(latex2exp::TeX(r"($HU_{\Delta wt./\Delta int.} - LU_{\Delta wt./\Delta int.}$)")) +
xlab("Days")
ip1
## p::pellet intake over weeks ----
ip2 <- id_wd %>%
ggplot(aes(
weeks, intake,
group = ID
)) +
geom_vline(xintercept = 2.5, linetype = "dashed") +
stat_summary(
fun.data = "mean_se",
geom = "point",
aes(group = interaction(ID, weeks), color = group)
) +
stat_summary(
fun.data = "mean_se",
geom = "pointrange",
aes(group = interaction(group, weeks), color = group)
) +
stat_summary(
fun.data = "mean_se",
geom = "line",
aes(group = group, color = group)
) +
scale_x_continuous(breaks = seq(1, 10, 1)) +
theme_uncertainty +
scale_y_continuous(
breaks = seq(0, 100, 10),
limits = c(0, 100),
expand = c(0, 0)
) +
ylab("Weekly # pellets") +
xlab("Weeks") +
scale_fill_manual(values = c("black", "orange")) +
scale_color_manual(values = c("black", "orange"))
ip2
### p::pellet intake @ week 10
ip3 <- id_wd %>%
ungroup() %>%
group_by(ID, group) %>%
summarise(
intake = mean(intake)
) %>%
ggplot(aes(
group, intake,
color = group
)) +
geom_boxplot(outlier.shape = NA, width = 0.5, aes(color = group)) +
geom_point(aes(fill = group), color = "black") +
ggsignif::geom_signif(
comparisons = list(c(1, 2)),
textsize = 0,
y_position = 87
) +
theme_uncertainty +
scale_x_discrete(labels = c("LU", "HU")) +
scale_y_continuous(
breaks = seq(0, 100, 10),
limits = c(0, 100),
expand = c(0, 0)
) +
ylab("# Pellets") +
xlab("") +
scale_fill_manual(values = c("black", "orange")) +
scale_color_manual(values = c("black", "orange"))
ip3
## p::failed retrievals ----
frp1 <- broom.mixed::tidy(frd_emm$emmeans, conf.int = TRUE) %>%
ggplot(aes(
group, response
)) +
geom_pointrange(size = 1, aes(color = group, ymin = conf.low, ymax = conf.high)) +
geom_point(
aes(fill = group),
color = "black",
alpha = 0.25,
data = frd %>%
group_by(ID, group) %>%
summarise(response = mean(failed_retrievals))
) +
ggsignif::geom_signif(
comparisons = list(c(1, 2)),
textsize = 0,
y_position = 19
) +
theme_uncertainty +
scale_x_discrete(labels = c("LU", "HU")) +
scale_y_continuous(
breaks = seq(0, 20, 5),
limits = c(0, 20),
expand = c(0, 0)
) +
ylab("# Failed retrievals") +
xlab("") +
scale_color_manual(values = c("black", "orange")) +
scale_fill_manual(values = c("black", "orange"))
frp1
## p::retrieval latency ----
broom.mixed::tidy(rld_emm$emmeans, conf.int = TRUE)
## p::failed retrievals ----
rlp1 <- broom.mixed::tidy(rld_emm$emmeans, conf.int = TRUE) %>%
ggplot(aes(
group, response
)) +
geom_pointrange(size = 1, aes(color = group, ymin = conf.low, ymax = conf.high)) +
geom_point(
data = rld %>%
group_by(ID, group) %>%
summarise(ret = mean(ret)),
aes(group, ret, fill = group),
color = "black", alpha = 0.25
) +
ggsignif::geom_signif(
comparisons = list(c(1, 2)),
textsize = 0,
y_position = 460
) +
theme_uncertainty +
scale_x_discrete(labels = c("LU", "HU")) +
scale_y_continuous(
breaks = seq(0, 500, 100),
limits = c(0, 500),
expand = c(0, 0)
) +
ylab("Retrieval latency (sec.)") +
xlab("") +
scale_color_manual(values = c("black", "orange")) +
scale_fill_manual(values = c("black", "orange"))
rlp1
## p::example dc ----
dcp1 <- dcd %>%
group_by(ID) %>%
mutate(
s = as.numeric(row_number() %% 100 == 0)
) %>%
filter(s == 1) %>%
ggplot(aes(
x, y,
group = ID
)) +
geom_line(aes(color = group)) +
stat_summary(
fun.data = "mean_se",
geom = "ribbon",
alpha = 0.25,
aes(group = group, fill = group)
) +
stat_summary(
fun.data = "mean_se",
geom = "line",
linewidth = 2,
aes(group = group, color = group)
) +
theme_uncertainty +
scale_x_continuous(
breaks = c(5, 10, 20, 40, 80, 120),
transform = "log"
) +
scale_y_continuous(
transform = "log",
limits = c(exp(1)^-0.5, exp(1)^3),
expand = c(0, 0),
breaks = scales::trans_breaks("log", function(x) exp(1)^x),
labels = scales::trans_format("log", scales::math_format(e^.x))
) +
annotation_logticks() +
ylab("# Rewards") +
xlab("Cost") +
scale_color_manual(values = c("black", "orange")) +
scale_fill_manual(values = c("black", "orange"))
dcp1
## p::demand curve alpha ----
alphaq0p1 <- alphaq0d %>%
filter(term == "alpha") %>%
ggplot(aes(
group, estimate
)) +
geom_boxplot(outlier.shape = NA, width = 0.5, aes(color = group)) +
geom_point(size = 5, shape = 21, aes(fill = group), color = "black", alpha = 0.5) +
ggsignif::geom_signif(
comparisons = list(c(1, 2)),
textsize = 0
) +
scale_y_continuous(
transform = "log",
limits = c(exp(1)^-9, exp(1)^-6),
expand = c(0, 0),
breaks = scales::trans_breaks("log", function(x) exp(1)^x),
labels = scales::trans_format("log", scales::math_format(e^.x))
) +
scale_x_discrete(labels = c("LU", "HU")) +
annotation_logticks() +
ggpubr::theme_pubr() +
theme_uncertainty +
ylab(expression(alpha)) +
xlab(" ") +
scale_color_manual(values = c("black", "orange")) +
scale_fill_manual(values = c("black", "orange"))
alphaq0p1
## p::demand curve q0 ----
alphaq0p2 <- alphaq0d %>%
filter(term == "q0") %>%
ggplot(aes(
group, estimate
)) +
geom_boxplot(outlier.shape = NA, width = 0.5, aes(color = group)) +
geom_point(size = 5, shape = 21, aes(fill = group), color = "black", alpha = 0.5) +
ggsignif::geom_signif(
comparisons = list(c(1, 2)),
textsize = 0,
y_position = 25
) +
scale_y_continuous(
breaks = seq(0, 30, 5),
limits = c(0, 30),
expand = c(0, 0)
) +
scale_x_discrete(labels = c("LU", "HU")) +
ggpubr::theme_pubr() +
theme_uncertainty +
ylab(latex2exp::TeX(r"($Q_{0}$)")) +
xlab(" ") +
scale_color_manual(values = c("black", "orange")) +
scale_fill_manual(values = c("black", "orange"))
alphaq0p2
## p::demand curve dq0/dalpha ----
alphaq0p4d <- alphaq0d %>%
select(-c(std.error, p.value)) %>%
pivot_wider(
names_from = term,
values_from = estimate
)
alphaq0p4d
alpha_mid <- summary(alphaq0p4d$alpha)["Median"]
q0_mid <- summary(alphaq0p4d$q0)["Median"]
alphaq0p4 <- alphaq0p4d %>%
ggplot(aes(
alpha, q0
)) +
geom_point(size = 5, shape = 21, aes(fill = group), color = "black", alpha = 0.5) +
geom_vline(
xintercept = alpha_mid,
linetype = "dashed"
) +
geom_hline(
yintercept = q0_mid,
linetype = "dashed"
) +
scale_y_continuous(
breaks = seq(0, 30, 5),
limits = c(0, 30),
expand = c(0, 0)
) +
scale_x_continuous(
transform = "log",
limits = c(exp(1)^-9, exp(1)^-6),
expand = c(0, 0),
breaks = scales::trans_breaks("log", function(x) exp(1)^x),
labels = scales::trans_format("log", scales::math_format(e^.x))
) +
ggpubr::theme_pubr() +
theme_uncertainty +
ylab(latex2exp::TeX(r"($Q_{0}$)")) +
xlab(latex2exp::TeX(r"($\alpha$)")) +
scale_color_manual(values = c("black", "orange")) +
scale_fill_manual(values = c("black", "orange"))
alphaq0p4
alphaq0p3 <- broom::tidy(alpha_q0_emtrend$emtrends, conf.int = TRUE) %>%
ggplot(aes(
group, q0.trend
)) +
geom_pointrange(aes(ymin = conf.low, ymax = conf.high, color = group), size = 1) +
boxplot_sig_bracket(1, 2) +
scale_y_continuous(
breaks = seq(-0.2, 0.5, 0.1),
limits = c(-0.2, 0.5),
expand = c(0, 0)
) +
scale_x_discrete(labels = c("LU", "HU")) +
ggpubr::theme_pubr() +
theme_uncertainty +
ylab(latex2exp::TeX(r"($\hat{\mu}_{\frac{\Delta Q_{0}}{\Delta \alpha}}$)")) +
xlab(" ") +
scale_color_manual(values = c("black", "orange")) +
scale_fill_manual(values = c("black", "orange"))
alphaq0p3
## p::rna-seq pdp ----
rnap1 <- rnaseq_pdp %>%
filter(symbol %in% rra_res$Name) %>%
ggplot(aes(
x, yhat
)) +
geom_smooth(
method = "lm",
formula = y ~ poly(x, 3, raw = TRUE),
color = "black"
) +
theme_uncertainty +
theme(
strip.text.x = element_text(size = 12)
) +
theme(strip.background = element_rect(fill = "white")) +
ylab(latex2exp::TeX(r"($Pr(Group = HU)$)")) +
xlab("Gene expression") +
facet_wrap(~symbol, scale = "free")
rnap1
## p::rna-seq pdp-slopes ----
rnap2 <- pdp_slopes %>%
mutate(gene = fct_reorder(gene, desc(estimate))) %>%
ggplot(aes(
gene, estimate
)) +
geom_pointrange(aes(ymin = conf.low, ymax = conf.high),
color = "black",
fill = "black",
alpha = 0.5,
size = 1,
shape = 21
) +
geom_hline(yintercept = 0, linetype = "dashed") +
scale_y_continuous(
breaks = seq(-0.05, 0.02, 0.01),
limits = c(-0.05, 0.02),
expand = c(0, 0)
) +
xlab("") +
ylab(latex2exp::TeX(r"($\hat{\mu}_{\frac{\Delta Pr(Group = HU)}{\Delta Gene \ expression}}$)")) +
theme_uncertainty
rnap2
## p::rna-seq gene rank ----
rnap3 <- rra_res %>%
filter(Score < 0.05) %>%
mutate(Name = fct_reorder(Name, desc(Score))) %>%
ggplot(aes(
Name, Score
)) +
geom_segment(aes(Name, xend = Name, y = exp(1)^1, yend = Score), color = "grey") +
geom_point(fill = "black") +
scale_y_continuous(
transform = trans_reverser("log"),
limits = c(exp(1)^1, exp(1)^-20),
expand = c(0, 0),
breaks = scales::trans_breaks("log", function(x) exp(1)^x),
labels = scales::trans_format("log", scales::math_format(e^.x))
) +
theme_uncertainty +
xlab("") +
ylab(latex2exp::TeX(r"($\rho^{-1}_{Gene \ rank}$)"))
rnap3
# figures ----
## fig1 ----
exp_setup_fig1 <- fig(
path = "../figures/fig1_experimental_setup.png",
aspect.ratio = "free"
) +
theme(text = element_text(size = 24))
fig1 <-
exp_setup_fig1 + theme(aspect.ratio = 1) +
wp3 + theme(aspect.ratio = 1) +
ip3 + theme(aspect.ratio = 1) +
ip1 + theme(aspect.ratio = 1) +
frp1 + theme(aspect.ratio = 1) +
rlp1 + theme(aspect.ratio = 1) +
plot_layout(
ncol = 3,
nrow = 2,
widths = 1,
heights = 1
) +
plot_annotation(tag_levels = c("A"))
fig1
ggsave(
plot = fig1,
filename = "../figures/fig1.png",
width = 5120,
height = 2880,
units = "px",
dpi = 300
)
## fig2 ----
exp_setup_fig2 <- fig(
path = "../figures/fig2_experimental_setup.png",
aspect.ratio = "free"
) +
theme(text = element_text(size = 24))
fig2 <-
exp_setup_fig2 + theme(aspect.ratio = 1) +
dcp1 + theme(aspect.ratio = 1) +
alphaq0p1 + theme(aspect.ratio = 1) +
alphaq0p2 + theme(aspect.ratio = 1) +
alphaq0p4 + theme(aspect.ratio = 1) +
alphaq0p3 + theme(aspect.ratio = 1) +
plot_layout(
ncol = 3,
nrow = 2,
widths = 1,
heights = 1
) +
plot_annotation(tag_levels = c("A"))
fig2
## fig3 ----
exp_setup_fig3 <- fig(
path = "../figures/rna_seq_diag.png",
aspect.ratio = "free"
) +
theme(text = element_text(size = 24))
fig3 <-
exp_setup_fig3 +
rnap3 + theme(aspect.ratio = 1) +
rnap2 + theme(aspect.ratio = 1) +
rnap1 + theme(aspect.ratio = 1) +
plot_layout(
ncol = 2,
nrow = 2,
widths = 1,
heights = 1
) +
plot_annotation(tag_levels = c("A"))
fig3
## fig4 ----
exp_setup_fig4 <- fig(
path = "../figures/clarity_example_annotated.PNG",
aspect.ratio = "free"
) +
theme(text = element_text(size = 24))
fig4 <-
exp_setup_fig4 +
clarityp2 + theme(aspect.ratio = 1) +
clarityp1 + theme(aspect.ratio = 1) +
clarityp3 + theme(aspect.ratio = 1) +
clarityp4 + theme(aspect.ratio = 1) +
clarityp5 + theme(aspect.ratio = 1) +
plot_layout(
ncol = 3,
nrow = 2,
widths = 1,
heights = 1
) +
plot_annotation(tag_levels = c("A"))
fig4
fig1
